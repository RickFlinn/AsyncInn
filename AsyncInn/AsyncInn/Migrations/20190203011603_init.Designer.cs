// <auto-generated />
using System;
using AsyncInn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncInn.Migrations
{
    [DbContext(typeof(AsyncInnDbContext))]
    [Migration("20190203011603_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncInn.Models.Amenity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Coffee Manufacturing Unit"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Gnome Butler"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Flea-Free Bedding"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Wall-Mounted Cookie Dispenser"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Pull-Out Hot Tub"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Guy With Giant Gong Alarm Clock"
                        },
                        new
                        {
                            ID = 7,
                            Name = "JavaScript"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.HotelLocation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("ID");

                    b.ToTable("HotelLocations");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "123 Nonexistington Street",
                            Name = "Charleston",
                            Phone = "885-900-1337"
                        },
                        new
                        {
                            ID = 2,
                            Address = "Downtownish",
                            Name = "Ponk Place",
                            Phone = "206-299-9000"
                        },
                        new
                        {
                            ID = 3,
                            Address = "Somewhere Over the Rainbow",
                            Name = "Emerald City AsyncInn",
                            Phone = "Tap the ruby slippers three times"
                        },
                        new
                        {
                            ID = 4,
                            Address = "Greater Downtown Amazon",
                            Name = "Amazon-syncInn",
                            Phone = "206-574-7699"
                        },
                        new
                        {
                            ID = 5,
                            Address = "Deep, deep, deep underground",
                            Name = "The Mole-mensville Async",
                            Phone = "1-800-DIG-DEEP"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelLocationID");

                    b.Property<int>("RoomNumber");

                    b.Property<bool>("PetFriendly");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("RoomID");

                    b.Property<int?>("RoomID1");

                    b.HasKey("HotelLocationID", "RoomNumber");

                    b.HasIndex("RoomID1");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("AsyncInn.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 0,
                            Name = "Teeny, Tiny, Trashable"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 2,
                            Name = "School Field Trip Suite"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 1,
                            Name = "The Seedy Motel Experience"
                        },
                        new
                        {
                            ID = 4,
                            Layout = 1,
                            Name = "Loosely Typed Relaxation Getaway"
                        },
                        new
                        {
                            ID = 5,
                            Layout = 0,
                            Name = "Homely Tuscan Countryside Peasant Farmhouse Studio"
                        },
                        new
                        {
                            ID = 6,
                            Layout = 1,
                            Name = "All Out Of Ideas Layout"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenity", b =>
                {
                    b.Property<int>("RoomID");

                    b.Property<int>("AmenityID");

                    b.HasKey("RoomID", "AmenityID");

                    b.HasIndex("AmenityID");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncInn.Models.HotelLocation", "HotelLocation")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelLocationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("HotelRooms")
                        .HasForeignKey("RoomID1");
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenity", b =>
                {
                    b.HasOne("AsyncInn.Models.Amenity", "Amenity")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenityID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
